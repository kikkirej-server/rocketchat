version: '3.8'

services:
  rocketchat:
    image: registry.rocket.chat/rocketchat/rocket.chat:latest
    command: >
      bash -c
        "for i in `seq 1 30`; do
          node main.js &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    restart: unless-stopped
    volumes:
      - uploads:/app/uploads
    environment:
      - PORT=3000
      - ROOT_URL=https://chat.kikkirej.net
      - MONGO_URL=mongodb://mongo:27017/rocketchat
      - MONGO_OPLOG_URL=mongodb://mongo:27017/local
      # - MAIL_URL=smtp://smtp.email
    depends_on:
      - mongo
    ports:
      - 3000:3000
    labels:
      - server.user=${TRAEFIK_IDENT}
      - traefik.enable=true
      - "traefik.http.routers.rocketchat.rule=Host(`chat.kikkirej.net`) || Host(`rocketchat.kikkirej.net`)"
      - traefik.http.routers.rocketchat.entrypoints=websecure
    networks: 
      - reverse-proxy
      - default

  mongo:
    image: mongo:4.0
    restart: unless-stopped
    volumes:
     - data_db:/data/db
     #- ./data/dump:/dump
    command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1

  # this container's job is just run the command to initialize the replica set.
  # it will run the command and remove himself (it will not stay running)
  mongo-init-replica:
    image: mongo:4.0
    command: >
      bash -c
        "for i in `seq 1 30`; do
          mongo mongo/rocketchat --eval \"
            rs.initiate({
              _id: 'rs0',
              members: [ { _id: 0, host: 'localhost:27017' } ]})\" &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    depends_on:
      - mongo

#   # hubot, the popular chatbot (add the bot user first and change the password before starting this image)
#   hubot:
#     image: rocketchat/hubot-rocketchat:latest
#     restart: unless-stopped
#     environment:
#       - ROCKETCHAT_URL=rocketchat:3000
#       - ROCKETCHAT_ROOM=GENERAL
#       - ROCKETCHAT_USER=bot
#       - ROCKETCHAT_PASSWORD=botpassword
#       - BOT_NAME=bot
#   # you can add more scripts as you'd like here, they need to be installable by npm
#       - EXTERNAL_SCRIPTS=hubot-help,hubot-seen,hubot-links,hubot-diagnostics
#     depends_on:
#       - rocketchat
#     labels:
#       - "traefik.enable=false"
#     volumes:
#       - ./scripts:/home/hubot/scripts
 
volumes:
  uploads:
  data_db:

networks:
  reverse-proxy:
    external: true
    name: ${LOADBALANCER_NAME}_reverse-proxy